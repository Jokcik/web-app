{"version":3,"sources":["C:/Users/User/web-app/src/app/core/od-resource-crud.ts","C:/Users/User/web-app/src/app/core/od-resource.ts","C:/Users/User/web-app/src/app/mainpage/mainpage.service.ts","C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/ckbutton.directive.js","C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/ckeditor.component.js","C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/ckeditor.module.js","C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/ckgroup.directive.js","C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/index.js","C:/Users/User/web-app/node_modules/ngx-resource/index.js","C:/Users/User/web-app/node_modules/ngx-resource/src/Resource.js","C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceAction.js","C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceCRUD.js","C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceCRUDBase.js","C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceGlobalConfig.js","C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceModel.js","C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceODATA.js","C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceParams.js","C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceProviders.js","C:/Users/User/web-app/node_modules/rxjs/_esm2015/add/operator/map.js","C:/Users/User/web-app/node_modules/rxjs/_esm2015/add/operator/mergeMap.js","C:/Users/User/web-app/node_modules/rxjs/_esm2015/add/operator/publish.js","C:/Users/User/web-app/node_modules/rxjs/_esm2015/add/operator/toPromise.js","C:/Users/User/web-app/node_modules/rxjs/_esm2015/operator/publish.js","C:/Users/User/web-app/node_modules/rxjs/_esm2015/operators/publish.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACyC;AAChC;AACT;AAGzC,IAAa,cAAc,GAA3B,oBAAmD,SAAQ,gEAAU;IAEnE,YAAY,IAAU;QACpB,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAkCD,gBAAgB;IAChB,MAAM,CAAC,IAAW,EAAE,QAA8B;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACnC,CAAC;CACF;AAjCC;IAHC,4EAAc,CAAC;QACd,OAAO,EAAE,IAAI;KACd,CAAC;;6CACsC;AAKxC;IAHC,4EAAc,CAAC;QACd,IAAI,EAAE,QAAQ;KACf,CAAC;;2CACoC;AAKtC;IAHC,4EAAc,CAAC;QACd,IAAI,EAAE,QAAQ;KACf,CAAC;;4CACkD;AAKpD;IAHC,4EAAc,CAAC;QACd,MAAM,EAAE,oEAAa,CAAC,IAAI;KAC3B,CAAC;;4CACiC;AAMnC;IAJC,4EAAc,CAAC;QACd,MAAM,EAAE,oEAAa,CAAC,GAAG;QACzB,IAAI,EAAE,SAAS;KAChB,CAAC;;8CACmC;AAMrC;IAJC,4EAAc,CAAC;QACd,MAAM,EAAE,oEAAa,CAAC,MAAM;QAC5B,IAAI,EAAE,SAAS;KAChB,CAAC;;8CACsC;AApC7B,cAAc;IAD1B,iEAAU,EAAE;qCAGO,2DAAI;GAFX,cAAc,CA0C1B;AA1C0B;;;;;;;;;;;;;;;;;;;;;;;ACN+C;AACf;AAClB;AACN;AAInC,IAAa,UAAU,GAAvB,gBAAwB,SAAQ,8DAAQ;IACtC,YAAY,IAAU;QACpB,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAJY,UAAU;IAFtB,iEAAU,EAAE;IACZ,4EAAc,CAAC,EAAC,GAAG,EAAE,8EAAW,CAAC,IAAI,EAAC,CAAC;qCAEpB,2DAAI;GADX,UAAU,CAItB;AAJsB;;;;;;;;;;;;;;;;;;;;;;;;ACNqB;AACY;AACf;AACN;AAEoB;AAIvD,IAAa,eAAe,GAA5B,qBAA6B,SAAQ,8EAA0C;IAC7E,YAAY,IAAU,EAAU,SAAuB;QACrD,KAAK,CAAC,IAAI,CAAC,CAAC;QADkB,cAAS,GAAT,SAAS,CAAc;IAEvD,CAAC;IAEM,aAAa;QAClB,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC1C,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;gBAC7B,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,WAAW,CAAC,WAAW,IAAI,QAAQ,CAAC;oBAAC,MAAM,CAAC;gBAC7D,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBAC7G,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAS,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;gBACjI,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAS,KAAK,CAAC,KAAK,CAAC,CAAC;YACnF,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;AAlBY,eAAe;IAF3B,iEAAU,EAAE;IACZ,4EAAc,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;qCAEjB,2DAAI,EAAqB,+EAAY;GAD5C,eAAe,CAkB3B;AAlB2B;;;;;;;;;ACV5B;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,eAAe,sBAAsB;AACrC,eAAe,qBAAqB;AACpC,iBAAiB,qBAAqB;AACtC,iBAAiB,qBAAqB;AACtC,cAAc,qBAAqB;AACnC,cAAc,qBAAqB;AACnC;AACA;AACA,8C;;;;;;;;ACtDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD,kEAAkE,oBAAoB;AACtF,mEAAmE,qBAAqB;AACxF;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oEAAoE,0BAA0B,EAAE;AAChG;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,gDAAgD;AAChD,KAAK,uBAAuB;AAC5B,EAAE;AACF;AACA,gBAAgB,qBAAqB;AACrC,kBAAkB,qBAAqB;AACvC,kBAAkB,qBAAqB;AACvC,gBAAgB,sBAAsB;AACtC,eAAe,sBAAsB;AACrC,cAAc,sBAAsB;AACpC,eAAe,sBAAsB;AACrC,cAAc,0CAA0C;AACxD,wBAAwB,gFAAgF;AACxG,uBAAuB,8EAA8E;AACrG,eAAe,qBAAqB;AACpC;AACA;AACA,8C;;;;;;;;AC/KA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,2C;;;;;;;;ACnCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,oCAAoC,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,cAAc,qBAAqB;AACnC,kBAAkB,qBAAqB;AACvC,oBAAoB,qBAAqB;AACzC,wBAAwB,gFAAgF;AACxG;AACA;AACA,6C;;;;;;;;AC7CA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmB;AACI;AACF;AACO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACO;;;;;;;;;;;;;;;;;;;ACrCa;AAC4C;AAC5C;AACrB;AACA;AACA;AACA;AACsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8CAA8C,sCAAsC,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAuB,6BAA6B,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sHAA+D;AAC/D,kDAAkD;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,+CAA+C,IAAI,IAAI;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjaAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qBAAqB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kEAAmB;AAC5B;AACA;AACA,2CAA2C;AAC3C,SAAS,qEAAc;AACvB,MAAM;AACN;AACA,CAAC;AACO;;;;;;;;;;;AClqBgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,0CAA0C;AAC1C;AACA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACwB;AACL;AACM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB,IAAI;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,IAAI;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,IAAI;AACzB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;;ACjER;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACwB;AACL;AACM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;AC7DR;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;ACxBW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;;;;;AC7CR;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACG;AACL;AACM;AACA;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,IAAI;AACzB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACO;AACR;AACA,4EAA4E,oBAAoB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrF4B;AACG;AAC/B;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7Ce;AACf;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;;;;;;;;;;;ACzCa;AACP;AACd;AACA,+B;;;;;;;;;;ACHqB;AACF;AACnB;AACA;AACA,oC;;;;;;;;;;ACJqB;AACH;AAClB;AACA,mC;;;;;;;ACHA;AACA;AACA,qC;;;;;;;;;;ACFiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;AClBkB;AACE;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC","file":"common.chunk.js","sourcesContent":["import {ODResource} from './od-resource';\r\nimport {ResourceAction, ResourceMethod, ResourceMethodStrict} from 'ngx-resource';\r\nimport {Http, RequestMethod} from '@angular/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ODResourceCrud<TQuery, TShort, TFull> extends ODResource {\r\n\r\n  constructor(http: Http) {\r\n    super(http);\r\n  }\r\n\r\n  @ResourceAction({\r\n    isArray: true\r\n  })\r\n  query: ResourceMethod<TQuery, TShort[]>;\r\n\r\n  @ResourceAction({\r\n    path: '/{!id}'\r\n  })\r\n  get: ResourceMethod<{id: any}, TFull>;\r\n\r\n  @ResourceAction({\r\n    path: '/{!id}'\r\n  })\r\n  get2: ResourceMethodStrict<TFull, {id: any}, TFull>;\r\n\r\n  @ResourceAction({\r\n    method: RequestMethod.Post\r\n  })\r\n  save: ResourceMethod<TFull, TFull>;\r\n\r\n  @ResourceAction({\r\n    method: RequestMethod.Put,\r\n    path: '/{!_id}'\r\n  })\r\n  update: ResourceMethod<TFull, TFull>;\r\n\r\n  @ResourceAction({\r\n    method: RequestMethod.Delete,\r\n    path: '/{!_id}'\r\n  })\r\n  remove: ResourceMethod<{_id: any}, any>;\r\n\r\n  // Alias to save\r\n  create(data: TFull, callback?: (res: TFull) => any): TFull {\r\n    return this.save(data, callback);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/User/web-app/src/app/core/od-resource-crud.ts","import {Resource, ResourceActionBase, ResourceParams} from 'ngx-resource';\r\nimport {environment} from '../../environments/environment';\r\nimport {Injectable} from '@angular/core';\r\nimport {Http} from '@angular/http';\r\n\r\n@Injectable()\r\n@ResourceParams({url: environment.host})\r\nexport class ODResource extends Resource {\r\n  constructor(http: Http) {\r\n    super(http);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/User/web-app/src/app/core/od-resource.ts","import {Materials} from '../news/shared/materials';\r\nimport {ResourceParams} from 'ngx-resource';\r\nimport {ODResourceCrud} from '../core/od-resource-crud';\r\nimport {Injectable} from '@angular/core';\r\nimport {Http} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Injectable()\r\n@ResourceParams({pathPrefix: 'news'})\r\nexport class MainpageService extends ODResourceCrud<void, Materials, Materials> {\r\n  constructor(http: Http, private sanitizer: DomSanitizer) {\r\n    super(http);\r\n  }\r\n\r\n  public querySafeHtml(): Observable<Materials[]> {\r\n    return this.query().$observable.map(array => {\r\n      array.forEach((value, index) => {\r\n        if (typeof value.description.description == 'object') return;\r\n        array[index].description.description = this.sanitizer.bypassSecurityTrustHtml(value.description.description);\r\n        array[index].description.short_description = this.sanitizer.bypassSecurityTrustHtml(<string>value.description.short_description);\r\n        array[index].title = this.sanitizer.bypassSecurityTrustHtml(<string>value.title);\r\n      });\r\n\r\n      return array;\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/User/web-app/src/app/mainpage/mainpage.service.ts","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckbutton [name]=\"'SaveButton'\" [command]=\"'saveCommand'\" (click)=\"save($event)\"\n *                [icon]=\"'/save.png'\" [toolbar]=\"'customGroup,1'\" [label]=\"'Save'\">\n *      </ckbutton>\n *   </ckeditor>\n */\nvar CKButtonDirective = (function () {\n    function CKButtonDirective() {\n        this.click = new core_1.EventEmitter();\n    }\n    CKButtonDirective.prototype.initialize = function (editor) {\n        var _this = this;\n        editor.instance.addCommand(this.command, {\n            exec: function (evt) {\n                _this.click.emit(evt);\n            }\n        });\n        editor.instance.ui.addButton(this.name, {\n            label: this.label,\n            command: this.command,\n            toolbar: this.toolbar,\n            icon: this.icon\n        });\n    };\n    CKButtonDirective.prototype.ngOnInit = function () {\n        if (!this.name)\n            throw new Error(\"Attribute 'name' is required on <ckbutton>\");\n        if (!this.command)\n            throw new Error(\"Attribute 'command' is required on <ckbutton>\");\n    };\n    return CKButtonDirective;\n}());\nCKButtonDirective.decorators = [\n    { type: core_1.Directive, args: [{\n                selector: 'ckbutton'\n            },] },\n];\n/** @nocollapse */\nCKButtonDirective.ctorParameters = function () { return []; };\nCKButtonDirective.propDecorators = {\n    'click': [{ type: core_1.Output },],\n    'label': [{ type: core_1.Input },],\n    'command': [{ type: core_1.Input },],\n    'toolbar': [{ type: core_1.Input },],\n    'name': [{ type: core_1.Input },],\n    'icon': [{ type: core_1.Input },],\n};\nexports.CKButtonDirective = CKButtonDirective;\n//# sourceMappingURL=ckbutton.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/ckbutton.directive.js\n// module id = ../../../../ng2-ckeditor/lib/ckbutton.directive.js\n// module chunks = common","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Imports\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar ckbutton_directive_1 = require(\"./ckbutton.directive\");\nvar ckgroup_directive_1 = require(\"./ckgroup.directive\");\n/**\n * CKEditor component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></ckeditor>\n */\nvar CKEditorComponent = (function () {\n    /**\n     * Constructor\n     */\n    function CKEditorComponent(zone) {\n        this.change = new core_1.EventEmitter();\n        this.ready = new core_1.EventEmitter();\n        this.blur = new core_1.EventEmitter();\n        this.focus = new core_1.EventEmitter();\n        this._value = '';\n        this.zone = zone;\n    }\n    Object.defineProperty(CKEditorComponent.prototype, \"value\", {\n        get: function () { return this._value; },\n        set: function (v) {\n            if (v !== this._value) {\n                this._value = v;\n                this.onChange(v);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CKEditorComponent.prototype.ngOnChanges = function (changes) {\n        if (changes.readonly && this.instance) {\n            this.instance.setReadOnly(changes.readonly.currentValue);\n        }\n    };\n    /**\n     * On component destroy\n     */\n    CKEditorComponent.prototype.ngOnDestroy = function () {\n        var _this = this;\n        if (this.instance) {\n            setTimeout(function () {\n                _this.instance.removeAllListeners();\n                CKEDITOR.instances[_this.instance.name].destroy();\n                _this.instance.destroy();\n                _this.instance = null;\n            });\n        }\n    };\n    /**\n     * On component view init\n     */\n    CKEditorComponent.prototype.ngAfterViewInit = function () {\n        // Configuration\n        this.ckeditorInit(this.config || {});\n    };\n    /**\n     * Value update process\n     */\n    CKEditorComponent.prototype.updateValue = function (value) {\n        var _this = this;\n        this.zone.run(function () {\n            _this.value = value;\n            _this.onChange(value);\n            _this.onTouched();\n            _this.change.emit(value);\n        });\n    };\n    /**\n     * CKEditor init\n     */\n    CKEditorComponent.prototype.ckeditorInit = function (config) {\n        var _this = this;\n        if (typeof CKEDITOR === 'undefined') {\n            console.warn('CKEditor 4.x is missing (http://ckeditor.com/)');\n        }\n        else {\n            if (this.readonly) {\n                config.readOnly = this.readonly;\n            }\n            // CKEditor replace textarea\n            this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n            // Set initial value\n            this.instance.setData(this.value);\n            // listen for instanceReady event\n            this.instance.on('instanceReady', function (evt) {\n                // send the evt to the EventEmitter\n                _this.ready.emit(evt);\n            });\n            // CKEditor change event\n            this.instance.on('change', function () {\n                _this.onTouched();\n                var value = _this.instance.getData();\n                // Debounce update\n                if (_this.debounce) {\n                    if (_this.debounceTimeout)\n                        clearTimeout(_this.debounceTimeout);\n                    _this.debounceTimeout = setTimeout(function () {\n                        _this.updateValue(value);\n                        _this.debounceTimeout = null;\n                    }, parseInt(_this.debounce));\n                    // Live update\n                }\n                else {\n                    _this.updateValue(value);\n                }\n            });\n            // CKEditor blur event\n            this.instance.on('blur', function (evt) {\n                _this.blur.emit(evt);\n            });\n            // CKEditor focus event\n            this.instance.on('focus', function (evt) {\n                _this.focus.emit(evt);\n            });\n            // Add Toolbar Groups to Editor. This will also add Buttons within groups.\n            this.toolbarGroups.forEach(function (group) {\n                group.initialize(_this);\n            });\n            // Add Toolbar Buttons to Editor.\n            this.toolbarButtons.forEach(function (button) {\n                button.initialize(_this);\n            });\n        }\n    };\n    /**\n     * Implements ControlValueAccessor\n     */\n    CKEditorComponent.prototype.writeValue = function (value) {\n        this._value = value;\n        if (this.instance)\n            this.instance.setData(value);\n    };\n    CKEditorComponent.prototype.onChange = function (_) { };\n    CKEditorComponent.prototype.onTouched = function () { };\n    CKEditorComponent.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    CKEditorComponent.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    return CKEditorComponent;\n}());\nCKEditorComponent.decorators = [\n    { type: core_1.Component, args: [{\n                selector: 'ckeditor',\n                providers: [\n                    {\n                        provide: forms_1.NG_VALUE_ACCESSOR,\n                        useExisting: core_1.forwardRef(function () { return CKEditorComponent; }),\n                        multi: true\n                    }\n                ],\n                template: \"<textarea #host></textarea>\",\n            },] },\n];\n/** @nocollapse */\nCKEditorComponent.ctorParameters = function () { return [\n    { type: core_1.NgZone, },\n]; };\nCKEditorComponent.propDecorators = {\n    'config': [{ type: core_1.Input },],\n    'readonly': [{ type: core_1.Input },],\n    'debounce': [{ type: core_1.Input },],\n    'change': [{ type: core_1.Output },],\n    'ready': [{ type: core_1.Output },],\n    'blur': [{ type: core_1.Output },],\n    'focus': [{ type: core_1.Output },],\n    'host': [{ type: core_1.ViewChild, args: ['host',] },],\n    'toolbarButtons': [{ type: core_1.ContentChildren, args: [ckbutton_directive_1.CKButtonDirective,] },],\n    'toolbarGroups': [{ type: core_1.ContentChildren, args: [ckgroup_directive_1.CKGroupDirective,] },],\n    'value': [{ type: core_1.Input },],\n};\nexports.CKEditorComponent = CKEditorComponent;\n//# sourceMappingURL=ckeditor.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/ckeditor.component.js\n// module id = ../../../../ng2-ckeditor/lib/ckeditor.component.js\n// module chunks = common","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar ckeditor_component_1 = require(\"./ckeditor.component\");\nvar ckbutton_directive_1 = require(\"./ckbutton.directive\");\nvar ckgroup_directive_1 = require(\"./ckgroup.directive\");\n/**\n * CKEditorModule\n */\nvar CKEditorModule = (function () {\n    function CKEditorModule() {\n    }\n    return CKEditorModule;\n}());\nCKEditorModule.decorators = [\n    { type: core_1.NgModule, args: [{\n                imports: [\n                    common_1.CommonModule\n                ],\n                declarations: [\n                    ckeditor_component_1.CKEditorComponent,\n                    ckbutton_directive_1.CKButtonDirective,\n                    ckgroup_directive_1.CKGroupDirective\n                ],\n                exports: [\n                    ckeditor_component_1.CKEditorComponent,\n                    ckbutton_directive_1.CKButtonDirective,\n                    ckgroup_directive_1.CKGroupDirective\n                ]\n            },] },\n];\n/** @nocollapse */\nCKEditorModule.ctorParameters = function () { return []; };\nexports.CKEditorModule = CKEditorModule;\n//# sourceMappingURL=ckeditor.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/ckeditor.module.js\n// module id = ../../../../ng2-ckeditor/lib/ckeditor.module.js\n// module chunks = common","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar ckbutton_directive_1 = require(\"./ckbutton.directive\");\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckgroup [name]=\"'exampleGroup2'\" [previous]=\"'1'\" [subgroupOf]=\"'exampleGroup1'\">\n *          .\n *          .\n *      </ckgroup>\n *   </ckeditor>\n */\nvar CKGroupDirective = (function () {\n    function CKGroupDirective() {\n    }\n    CKGroupDirective.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // Reconfigure each button's toolbar property within ckgroup to hold its parent's name\n        this.toolbarButtons.forEach(function (button) { return button.toolbar = _this.name; });\n    };\n    CKGroupDirective.prototype.initialize = function (editor) {\n        editor.instance.ui.addToolbarGroup(this.name, this.previous, this.subgroupOf);\n        // Initialize each button within ckgroup\n        this.toolbarButtons.forEach(function (button) {\n            button.initialize(editor);\n        });\n    };\n    return CKGroupDirective;\n}());\nCKGroupDirective.decorators = [\n    { type: core_1.Directive, args: [{\n                selector: 'ckgroup'\n            },] },\n];\n/** @nocollapse */\nCKGroupDirective.ctorParameters = function () { return []; };\nCKGroupDirective.propDecorators = {\n    'name': [{ type: core_1.Input },],\n    'previous': [{ type: core_1.Input },],\n    'subgroupOf': [{ type: core_1.Input },],\n    'toolbarButtons': [{ type: core_1.ContentChildren, args: [ckbutton_directive_1.CKButtonDirective,] },],\n};\nexports.CKGroupDirective = CKGroupDirective;\n//# sourceMappingURL=ckgroup.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/ckgroup.directive.js\n// module id = ../../../../ng2-ckeditor/lib/ckgroup.directive.js\n// module chunks = common","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ckeditor_module_1 = require(\"./ckeditor.module\");\nexports.CKEditorModule = ckeditor_module_1.CKEditorModule;\nvar ckeditor_component_1 = require(\"./ckeditor.component\");\nexports.CKEditorComponent = ckeditor_component_1.CKEditorComponent;\nvar ckbutton_directive_1 = require(\"./ckbutton.directive\");\nexports.CKButtonDirective = ckbutton_directive_1.CKButtonDirective;\nvar ckgroup_directive_1 = require(\"./ckgroup.directive\");\nexports.CKGroupDirective = ckgroup_directive_1.CKGroupDirective;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ng2-ckeditor/lib/index.js\n// module id = ../../../../ng2-ckeditor/lib/index.js\n// module chunks = common","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { ResourceProviders } from './src/ResourceProviders';\nexport * from './src/Resource';\nexport * from './src/ResourceAction';\nexport * from './src/ResourceCRUD';\nexport * from './src/ResourceCRUDBase';\nexport * from './src/ResourceGlobalConfig';\nexport * from './src/ResourceModel';\nexport * from './src/ResourceODATA';\nexport * from './src/ResourceParams';\nexport * from './src/ResourceProviders';\nvar ResourceModule = /** @class */ (function () {\n    function ResourceModule() {\n    }\n    ResourceModule.forRoot = function () {\n        return {\n            ngModule: ResourceModule,\n            providers: ResourceProviders.providers[ResourceProviders.mainProvidersName]\n        };\n    };\n    ResourceModule.forChild = function (subSet) {\n        return {\n            ngModule: ResourceModule,\n            providers: ResourceProviders.providers[subSet] ? ResourceProviders.providers[subSet] : []\n        };\n    };\n    ResourceModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, HttpModule]\n                },] },\n    ];\n    /** @nocollapse */\n    ResourceModule.ctorParameters = function () { return []; };\n    return ResourceModule;\n}());\nexport { ResourceModule };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/index.js\n// module id = ../../../../ngx-resource/index.js\n// module chunks = common","import { Injectable } from '@angular/core';\nimport { Headers, Http, Request, RequestMethod, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/publish';\nimport 'rxjs/add/operator/toPromise';\nimport { ResourceGlobalConfig, TGetParamsMappingType } from './ResourceGlobalConfig';\nvar Resource = /** @class */ (function () {\n    function Resource(http) {\n        this.http = http;\n        this.$url = null;\n        this.$path = null;\n        this.$headers = null;\n        this.$params = null;\n        this.$data = null;\n    }\n    Resource.$cleanData = function (obj) {\n        if (Array.isArray(obj)) {\n            return this.$cleanDataArray(obj);\n        }\n        else {\n            return this.$cleanDataObject(obj);\n        }\n    };\n    Resource.$cleanDataArray = function (obj) {\n        for (var propName in obj) {\n            if (typeof obj[propName] === 'function' || this.$cleanDataFields.indexOf(propName) > -1) {\n                delete obj[propName];\n            }\n        }\n        return obj;\n    };\n    Resource.$cleanDataObject = function (obj) {\n        var cleanedObj = {};\n        for (var propName in obj) {\n            if (typeof obj[propName] !== 'function' && this.$cleanDataFields.indexOf(propName) === -1) {\n                cleanedObj[propName] = obj[propName];\n            }\n        }\n        return cleanedObj;\n    };\n    /**\n     * Get main url of the resource\n     * @returns {string|Promise<string>}\n     */\n    Resource.prototype.$getUrl = function (methodOptions) {\n        return this.$url || this.$_getUrl(methodOptions) || ResourceGlobalConfig.url || '';\n    };\n    /**\n     * Set resource url\n     * @param url\n     */\n    Resource.prototype.$setUrl = function (url) {\n        this.$url = url;\n    };\n    /**\n     * Get path of the resource\n     * @returns {string|Promise<string>}\n     */\n    Resource.prototype.$getPath = function (methodOptions) {\n        return this.$path || this.$_getPath(methodOptions) || ResourceGlobalConfig.path || '';\n    };\n    /**\n     * Set resource path\n     * @param path\n     */\n    Resource.prototype.$setPath = function (path) {\n        this.$path = path;\n    };\n    /**\n     * Get headers\n     * @returns {any|Promise<any>}\n     */\n    Resource.prototype.$getHeaders = function (methodOptions) {\n        return this.$headers || this.$_getHeaders(methodOptions) || ResourceGlobalConfig.headers || {};\n    };\n    /**\n     * Set resource headers\n     * @param headers\n     */\n    Resource.prototype.$setHeaders = function (headers) {\n        this.$headers = headers;\n    };\n    /**\n     * Get default params\n     * @returns {any|Promise<any>|{}}\n     */\n    Resource.prototype.$getParams = function (methodOptions) {\n        return this.$params || this.$_getParams(methodOptions) || ResourceGlobalConfig.params || {};\n    };\n    /**\n     * Set default resource params\n     * @param params\n     */\n    Resource.prototype.$setParams = function (params) {\n        this.$params = params;\n    };\n    /**\n     * Get default data\n     * @returns {any|Promise<any>|{}}\n     */\n    Resource.prototype.$getData = function (methodOptions) {\n        return this.$data || this.$_getData(methodOptions) || ResourceGlobalConfig.data || {};\n    };\n    /**\n     * Set default resource params\n     * @param data\n     */\n    Resource.prototype.$setData = function (data) {\n        this.$data = data;\n    };\n    /**\n     * Create the model\n     *\n     * @returns {any}\n     */\n    Resource.prototype.$createModel = function () {\n        var ret = this.$initResultObject();\n        ret.$resource = this;\n        return ret;\n    };\n    /**\n     * Body serializer\n     *\n     * @param body\n     * @returns {string}\n     */\n    Resource.prototype.$bodySerializer = function (body) {\n        return JSON.stringify(body);\n    };\n    /**\n     * That is called before executing request\n     * @param req\n     */\n    Resource.prototype.$requestInterceptor = function (req, methodOptions) {\n        return req;\n    };\n    /**\n     * Request observable interceptor\n     * @param observable\n     * @returns {Observable<any>}\n     */\n    Resource.prototype.$responseInterceptor = function (observable, req, methodOptions) {\n        return observable.map(function (res) { return res._body ? res.json() : null; });\n    };\n    // removeTrailingSlash(): boolean {\n    //   return true;\n    // }\n    Resource.prototype.$initResultObject = function (methodOptions) {\n        if (methodOptions === void 0) { methodOptions = null; }\n        return {};\n    };\n    Resource.prototype.$map = function (item) {\n        return item;\n    };\n    Resource.prototype.$filter = function (item) {\n        return true;\n    };\n    Resource.prototype.$getResourceOptions = function () {\n        return null;\n    };\n    Resource.prototype.$request = function (req, methodOptions) {\n        if (methodOptions === void 0) { methodOptions = {}; }\n        var requestObservable = this.http.request(req);\n        // noinspection TypeScriptValidateTypes\n        return methodOptions.responseInterceptor ?\n            methodOptions.responseInterceptor(requestObservable, req, methodOptions) :\n            this.$responseInterceptor(requestObservable, req, methodOptions);\n    };\n    Resource.prototype.$resourceAction = function (data, params, callback, onError, methodOptions) {\n        this.$_setGlobalsToOptions(methodOptions);\n        if (methodOptions.toObservable && methodOptions.isLazy === undefined) {\n            methodOptions.isLazy = true;\n        }\n        var shell = {\n            returnInternal: this.$_createReturnData(data, methodOptions),\n            data: data,\n            params: params,\n            options: methodOptions,\n            callback: callback,\n            onError: onError\n        };\n        shell.returnExternal = methodOptions.lean ? this.$_createReturnData(data, methodOptions) : shell.returnInternal;\n        this.$_cleanData(shell);\n        this.$_fillInternal(shell);\n        this.$_mainRequest(shell);\n        var $observable = methodOptions.lean ? shell.returnInternal.$observable : shell.returnExternal.$observable;\n        if (methodOptions.toObservable) {\n            return $observable;\n        }\n        if (methodOptions.toPromise) {\n            return $observable.toPromise();\n        }\n        return shell.returnExternal;\n    };\n    Resource.prototype.$_createReturnData = function (data, methodOptions) {\n        if (methodOptions.isLazy) {\n            return {};\n        }\n        if (methodOptions.isArray) {\n            return [];\n        }\n        if (methodOptions.lean || !data || data.$resource !== this) {\n            return this.$_initResultObject(methodOptions);\n        }\n        return data;\n    };\n    Resource.prototype.$_initResultObject = function (methodOptions) {\n        return methodOptions.initResultObject ? methodOptions.initResultObject() : this.$initResultObject(methodOptions);\n    };\n    Resource.prototype.$_map = function (methodOptions) {\n        return methodOptions.map ? methodOptions.map : this.$map;\n    };\n    Resource.prototype.$_filter = function (methodOptions) {\n        return methodOptions.filter ? methodOptions.filter : this.$filter;\n    };\n    Resource.prototype.$_cleanData = function (shell) {\n        if (shell.data && !shell.options.skipDataCleaning) {\n            shell.data = shell.data.toJSON ? shell.data.toJSON() : Resource.$cleanData(shell.data);\n        }\n    };\n    Resource.prototype.$_fillInternal = function (shell) {\n        var returnInternal = shell.returnInternal;\n        var $observable = Observable.create(function (subscriber) {\n            shell.mainDeferredSubscriber = subscriber;\n        }).flatMap(function () { return shell.mainObservable; });\n        var $abortRequest = function () {\n            returnInternal.$resolved = true;\n        };\n        if (!shell.options.isLazy) {\n            $observable = $observable.publish();\n            $observable.connect();\n        }\n        Object.defineProperty(returnInternal, '$resolved', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(returnInternal, '$observable', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: $observable\n        });\n        Object.defineProperty(returnInternal, '$abortRequest', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: $abortRequest\n        });\n        Object.defineProperty(returnInternal, '$resource', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: this\n        });\n    };\n    Resource.prototype.$_mainRequest = function (shell) {\n        var _this = this;\n        this.$_resolveMainOptions(shell)\n            .then(function (extraOptions) {\n            shell.extraOptions = extraOptions;\n            if (shell.returnInternal.$resolved) {\n                shell.mainObservable = Observable.create(function (subscriber) {\n                    subscriber.next(null);\n                });\n                _this.$_releaseMainDeferredSubscriber(shell);\n                return;\n            }\n            shell.url = extraOptions.url + extraOptions.path;\n            _this.$_prepareDataParams(shell);\n            _this.$_prepareBody(shell);\n            _this.$_prepareSearch(shell);\n            _this.$_createRequestOptions(shell);\n            var mainRequest = new Request(shell.requestOptions);\n            mainRequest = shell.options.requestInterceptor ?\n                shell.options.requestInterceptor(mainRequest, shell.options) :\n                _this.$requestInterceptor(mainRequest, shell.options);\n            if (!mainRequest) {\n                shell.mainObservable = Observable.create(function (observer) {\n                    observer.error(new Error('Request is null'));\n                });\n                console.warn('Request is null');\n                _this.$_releaseMainDeferredSubscriber(shell);\n                return;\n            }\n            // Doing the request\n            var requestObservable = _this.$request(mainRequest, shell.options);\n            shell.mainObservable = shell.options.isLazy ? requestObservable : _this.$_createMainObservable(shell, requestObservable);\n            _this.$_releaseMainDeferredSubscriber(shell);\n        });\n    };\n    Resource.prototype.$_resolveMainOptions = function (shell) {\n        return Promise\n            .all([\n            Promise.resolve(shell.options.url || this.$getUrl(shell.options)),\n            Promise.resolve(shell.options.path || this.$getPath(shell.options)),\n            Promise.resolve(shell.options.headers || this.$getHeaders(shell.options)),\n            Promise.resolve(shell.options.params || this.$getParams(shell.options)),\n            Promise.resolve(shell.options.data || this.$getData(shell.options))\n        ])\n            .then(function (data) {\n            if (shell.options.pathPrefix) {\n                data[1] = shell.options.pathPrefix + data[1];\n            }\n            return {\n                url: data[0],\n                path: data[1],\n                headers: new Headers(data[2] ? Object.assign({}, data[2]) : data[2]),\n                params: data[3] ? Object.assign({}, data[3]) : data[3],\n                data: data[4]\n            };\n        });\n    };\n    Resource.prototype.$_releaseMainDeferredSubscriber = function (shell) {\n        if (shell.mainDeferredSubscriber) {\n            shell.mainDeferredSubscriber.next();\n            shell.mainDeferredSubscriber.complete();\n            shell.mainDeferredSubscriber = null;\n        }\n    };\n    Resource.prototype.$_prepareDataParams = function (shell) {\n        var usedPathParams = {};\n        shell.usedPathParams = usedPathParams;\n        if (!Array.isArray(shell.data) || shell.params) {\n            if (!Array.isArray(shell.data)) {\n                shell.data = Object.assign({}, shell.extraOptions.data, shell.data);\n            }\n            var pathParams = shell.url.match(/{([^}]*)}/g) || [];\n            var _loop_1 = function (i) {\n                var pathParam = pathParams[i];\n                var pathKey = pathParam.substr(1, pathParam.length - 2);\n                var isMandatory = pathKey[0] === '!';\n                if (isMandatory) {\n                    pathKey = pathKey.substr(1);\n                }\n                var isGetOnly = pathKey[0] === ':';\n                if (isGetOnly) {\n                    pathKey = pathKey.substr(1);\n                }\n                var value = this_1.$_getValueForPath(pathKey, shell.extraOptions.params, shell.params || shell.data, usedPathParams);\n                if (isGetOnly && !shell.params) {\n                    delete shell.data[pathKey];\n                }\n                if (this_1.$_isNullOrUndefined(value)) {\n                    if (isMandatory) {\n                        var consoleMsg_1 = \"Mandatory \" + pathParam + \" path parameter is missing\";\n                        shell.mainObservable = Observable.create(function (observer) {\n                            observer.error(new Error(consoleMsg_1));\n                        });\n                        console.warn(consoleMsg_1);\n                        this_1.$_releaseMainDeferredSubscriber(shell);\n                        throw new Error(consoleMsg_1);\n                    }\n                    shell.url = shell.url.substr(0, shell.url.indexOf(pathParam));\n                    return \"break\";\n                }\n                // Replacing in the url\n                shell.url = shell.url.replace(pathParam, value);\n            };\n            var this_1 = this;\n            for (var i = 0; i < pathParams.length; i++) {\n                var state_1 = _loop_1(i);\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n        // Removing double slashed from final url\n        shell.url = shell.url.replace(/\\/\\/+/g, '/');\n        if (shell.url.startsWith('http')) {\n            shell.url = shell.url.replace(':/', '://');\n        }\n        // Remove trailing slash\n        if (typeof shell.options.removeTrailingSlash === 'undefined') {\n            shell.options.removeTrailingSlash = true;\n        }\n        if (shell.options.removeTrailingSlash) {\n            while (shell.url[shell.url.length - 1] === '/') {\n                shell.url = shell.url.substr(0, shell.url.length - 1);\n            }\n        }\n        // Remove mapped params\n        for (var key in shell.extraOptions.params) {\n            if (shell.extraOptions.params[key][0] === '@') {\n                delete shell.extraOptions.params[key];\n            }\n        }\n    };\n    Resource.prototype.$_prepareBody = function (shell) {\n        if (shell.options.method === RequestMethod.Get) {\n            // GET\n            shell.searchParams = Object.assign({}, shell.extraOptions.params, shell.data);\n        }\n        else {\n            // NON GET\n            if (shell.data) {\n                var _body = {};\n                if (shell.options.rootNode) {\n                    _body[\"\" + shell.options.rootNode] = shell.data;\n                }\n                else {\n                    _body = shell.data;\n                }\n                // shell.body = JSON.stringify(_body);\n                shell.body = shell.options.bodySerializer ? shell.options.bodySerializer(_body) : this.$bodySerializer(_body);\n            }\n            shell.searchParams = shell.params;\n        }\n        if (!shell.body) {\n            shell.extraOptions.headers.delete('content-type');\n        }\n    };\n    Resource.prototype.$_prepareSearch = function (shell) {\n        shell.search = new URLSearchParams();\n        if (!shell.params) {\n            for (var key in shell.searchParams) {\n                if (shell.searchParams.hasOwnProperty(key) && !shell.usedPathParams[key]) {\n                    var value = shell.searchParams[key];\n                    this.$_appendSearchParams(shell.search, key, value);\n                }\n            }\n        }\n        var tsName = shell.options.addTimestamp;\n        if (tsName) {\n            if (tsName === true) {\n                tsName = 'ts';\n            }\n            shell.search.append(tsName, '' + Date.now());\n        }\n    };\n    Resource.prototype.$_createRequestOptions = function (shell) {\n        shell.requestOptions = {\n            method: shell.options.method,\n            headers: shell.extraOptions.headers,\n            body: shell.body,\n            url: shell.url,\n            withCredentials: shell.options.withCredentials\n        };\n        if (shell.options.angularV2) {\n            shell.requestOptions.search = shell.search;\n        }\n        else {\n            shell.requestOptions.params = shell.search;\n        }\n    };\n    Resource.prototype.$_createMainObservable = function (shell, requestObservable) {\n        var _this = this;\n        return Observable.create(function (subscriber) {\n            var reqSubscr = requestObservable.subscribe(function (resp) {\n                var filter = _this.$_filter(shell.options);\n                var map = _this.$_map(shell.options);\n                if (resp !== null) {\n                    if (shell.options.isArray) {\n                        // Expecting array\n                        if (!Array.isArray(resp)) {\n                            console.error('Returned data should be an array. Received', resp);\n                        }\n                        else {\n                            (_a = shell.returnExternal).push.apply(_a, resp\n                                .filter(filter)\n                                .map(map)\n                                .map(function (respItem) {\n                                if (!respItem) {\n                                    return respItem;\n                                }\n                                if (typeof respItem === 'object') {\n                                    if (!shell.options.lean) {\n                                        respItem.$resource = _this;\n                                    }\n                                    return _this.$_setDataToObject(_this.$_initResultObject(shell.options), respItem);\n                                }\n                                return respItem;\n                            }));\n                        }\n                    }\n                    else {\n                        // Expecting object\n                        if (Array.isArray(resp)) {\n                            console.error('Returned data should be an object. Received', resp);\n                        }\n                        else {\n                            if (filter(resp)) {\n                                shell.returnExternal = _this.$_setDataToObject(shell.returnExternal, map(resp));\n                            }\n                        }\n                    }\n                }\n                shell.returnInternal.$resolved = true;\n                subscriber.next(shell.returnExternal);\n                var _a;\n            }, function (err) {\n                subscriber.error(err);\n                if (shell.onError) {\n                    shell.onError(err);\n                }\n            }, function () {\n                // shell.returnInternal.$resolved = true;\n                subscriber.complete();\n                if (shell.callback) {\n                    shell.callback(shell.returnExternal);\n                }\n            });\n            shell.returnInternal.$abortRequest = function () {\n                if (shell.returnInternal.$resolved) {\n                    return;\n                }\n                reqSubscr.unsubscribe();\n                shell.returnInternal.$resolved = true;\n            };\n        });\n    };\n    Resource.prototype.$_setDataToObject = function (ret, resp) {\n        if (ret.$setData) {\n            ret.$setData(resp);\n        }\n        else {\n            if (Array.isArray(resp)) {\n                ret = resp;\n            }\n            else {\n                Object.assign(ret, resp);\n            }\n        }\n        return ret;\n    };\n    Resource.prototype.$_getValueForPath = function (key, params, data, usedPathParams) {\n        if (!this.$_isNullOrUndefined(data[key]) && typeof data[key] !== 'object') {\n            usedPathParams[key] = true;\n            return data[key];\n        }\n        if (this.$_isNullOrUndefined(params[key])) {\n            return null;\n        }\n        if (params[key][0] === '@') {\n            return this.$_getValueForPath(params[key].substr(1), params, data, usedPathParams);\n        }\n        usedPathParams[key] = true;\n        return params[key];\n    };\n    Resource.prototype.$_isNullOrUndefined = function (value) {\n        return value === null || value === undefined;\n    };\n    Resource.prototype.$_appendSearchParams = function (search, key, value) {\n        /// Convert dates to ISO format string\n        if (value instanceof Date) {\n            search.append(key, value.toISOString());\n            return;\n        }\n        if (typeof value === 'object') {\n            switch (ResourceGlobalConfig.getParamsMappingType) {\n                case TGetParamsMappingType.Plain:\n                    if (Array.isArray(value)) {\n                        for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                            var arr_value = value_1[_i];\n                            search.append(key, arr_value);\n                        }\n                    }\n                    else {\n                        if (value && typeof value === 'object') {\n                            /// Convert dates to ISO format string\n                            if (value instanceof Date) {\n                                value = value.toISOString();\n                            }\n                            else {\n                                value = JSON.stringify(value);\n                            }\n                        }\n                        search.append(key, value);\n                    }\n                    break;\n                case TGetParamsMappingType.Bracket:\n                    /// Convert object and arrays to query params\n                    for (var k in value) {\n                        if (value.hasOwnProperty(k)) {\n                            this.$_appendSearchParams(search, key + '[' + k + ']', value[k]);\n                        }\n                    }\n                    break;\n                case TGetParamsMappingType.JQueryParamsBracket:\n                    /// Convert object and arrays to query params according to $.params\n                    for (var k in value) {\n                        if (value.hasOwnProperty(k)) {\n                            var path = key + \"[\" + k + \"]\";\n                            if (Array.isArray(value) && typeof value[k] !== 'object') {\n                                path = key + \"[]\";\n                            }\n                            this.$_appendSearchParams(search, path, value[k]);\n                        }\n                    }\n                    break;\n            }\n            return;\n        }\n        search.append(key, value);\n    };\n    /**\n     * Get url to be replaced by ResourceParamsBase\n     *\n     * @param methodOptions\n     * @returns { any | Promise<any>}\n     * @private\n     */\n    Resource.prototype.$_getUrl = function (methodOptions) {\n        return null;\n    };\n    /**\n     * Get get path to be replaced by ResourceParamsBase\n     *\n     * @param methodOptions\n     * @returns { any | Promise<any>}\n     * @private\n     */\n    Resource.prototype.$_getPath = function (methodOptions) {\n        return null;\n    };\n    /**\n     * Get headers to be replaced by ResourceParamsBase\n     *\n     * @param methodOptions\n     * @returns { any | Promise<any>}\n     * @private\n     */\n    Resource.prototype.$_getHeaders = function (methodOptions) {\n        return null;\n    };\n    /**\n     * Get params to be replaced by ResourceParamsBase\n     *\n     * @param methodOptions\n     * @returns { any | Promise<any>}\n     * @private\n     */\n    Resource.prototype.$_getParams = function (methodOptions) {\n        return null;\n    };\n    /**\n     * Get data to be replaced by ResourceParamsBase\n     *\n     * @param methodOptions\n     * @returns { any | Promise<any>}\n     * @private\n     */\n    Resource.prototype.$_getData = function (methodOptions) {\n        return null;\n    };\n    Resource.prototype.$_setGlobalsToOptions = function (methodOptions) {\n        if (methodOptions.toPromise === undefined && ResourceGlobalConfig.toPromise !== null) {\n            methodOptions.toPromise = ResourceGlobalConfig.toPromise;\n        }\n        if (methodOptions.toObservable === undefined && ResourceGlobalConfig.toObservable !== null) {\n            methodOptions.toObservable = ResourceGlobalConfig.toObservable;\n        }\n        if (methodOptions.lean === undefined && ResourceGlobalConfig.lean !== null) {\n            methodOptions.lean = ResourceGlobalConfig.lean;\n        }\n    };\n    Resource.$cleanDataFields = [\n        '$cleanDataFields',\n        '$resolved',\n        '$observable',\n        '$abortRequest',\n        '$resource'\n    ];\n    Resource.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Resource.ctorParameters = function () { return [\n        { type: Http, },\n    ]; };\n    return Resource;\n}());\nexport { Resource };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/Resource.js\n// module id = ../../../../ngx-resource/src/Resource.js\n// module chunks = common","import { RequestMethod } from '@angular/http';\nexport function ResourceAction(methodOptions) {\n    methodOptions = methodOptions || {};\n    if (methodOptions.method === undefined) {\n        methodOptions.method = RequestMethod.Get;\n    }\n    return function (target, propertyKey) {\n        target[propertyKey] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var data = null;\n            var params = null;\n            var callback = null;\n            var onError = null;\n            args.forEach(function (arg) {\n                if (typeof arg === 'function') {\n                    if (callback) {\n                        onError = arg;\n                    }\n                    else {\n                        callback = arg;\n                    }\n                }\n                else {\n                    if (data) {\n                        params = arg;\n                    }\n                    else {\n                        data = arg;\n                    }\n                }\n            });\n            var options = Object.assign({}, this.getResourceOptions(), methodOptions);\n            return this.$resourceAction(data, params, callback, onError, options);\n        };\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceAction.js\n// module id = ../../../../ngx-resource/src/ResourceAction.js\n// module chunks = common","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { RequestMethod } from '@angular/http';\nimport { Resource } from './Resource';\nimport { ResourceAction } from './ResourceAction';\nvar ResourceCRUD = /** @class */ (function (_super) {\n    __extends(ResourceCRUD, _super);\n    function ResourceCRUD() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // Alias to save\n    ResourceCRUD.prototype.create = function (data, callback) {\n        return this.save(data, callback);\n    };\n    __decorate([\n        ResourceAction({\n            isArray: true\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUD.prototype, \"query\", void 0);\n    __decorate([\n        ResourceAction({\n            path: '/{!id}'\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUD.prototype, \"get\", void 0);\n    __decorate([\n        ResourceAction({\n            method: RequestMethod.Post\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUD.prototype, \"save\", void 0);\n    __decorate([\n        ResourceAction({\n            method: RequestMethod.Put,\n            path: '/{!id}'\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUD.prototype, \"update\", void 0);\n    __decorate([\n        ResourceAction({\n            method: RequestMethod.Delete,\n            path: '/{!id}'\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUD.prototype, \"remove\", void 0);\n    return ResourceCRUD;\n}(Resource));\nexport { ResourceCRUD };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceCRUD.js\n// module id = ../../../../ngx-resource/src/ResourceCRUD.js\n// module chunks = common","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { RequestMethod } from '@angular/http';\nimport { Resource } from './Resource';\nimport { ResourceAction } from './ResourceAction';\nvar ResourceCRUDBase = /** @class */ (function (_super) {\n    __extends(ResourceCRUDBase, _super);\n    function ResourceCRUDBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // Alias to save\n    ResourceCRUDBase.prototype.create = function (data, callback) {\n        return this.save(data, callback);\n    };\n    __decorate([\n        ResourceAction({\n            isArray: true\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUDBase.prototype, \"query\", void 0);\n    __decorate([\n        ResourceAction(),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUDBase.prototype, \"get\", void 0);\n    __decorate([\n        ResourceAction({\n            method: RequestMethod.Post\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUDBase.prototype, \"save\", void 0);\n    __decorate([\n        ResourceAction({\n            method: RequestMethod.Put\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUDBase.prototype, \"update\", void 0);\n    __decorate([\n        ResourceAction({\n            method: RequestMethod.Delete\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceCRUDBase.prototype, \"remove\", void 0);\n    return ResourceCRUDBase;\n}(Resource));\nexport { ResourceCRUDBase };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceCRUDBase.js\n// module id = ../../../../ngx-resource/src/ResourceCRUDBase.js\n// module chunks = common","export var TGetParamsMappingType;\n(function (TGetParamsMappingType) {\n    TGetParamsMappingType[TGetParamsMappingType[\"Plain\"] = 0] = \"Plain\";\n    TGetParamsMappingType[TGetParamsMappingType[\"Bracket\"] = 1] = \"Bracket\";\n    TGetParamsMappingType[TGetParamsMappingType[\"JQueryParamsBracket\"] = 2] = \"JQueryParamsBracket\";\n})(TGetParamsMappingType || (TGetParamsMappingType = {}));\nvar ResourceGlobalConfig = /** @class */ (function () {\n    function ResourceGlobalConfig() {\n    }\n    ResourceGlobalConfig.url = null;\n    ResourceGlobalConfig.path = null;\n    ResourceGlobalConfig.headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    };\n    ResourceGlobalConfig.params = null;\n    ResourceGlobalConfig.data = null;\n    ResourceGlobalConfig.add2Provides = null;\n    ResourceGlobalConfig.lean = null;\n    ResourceGlobalConfig.toPromise = null;\n    ResourceGlobalConfig.toObservable = null;\n    ResourceGlobalConfig.getParamsMappingType = TGetParamsMappingType.Plain;\n    return ResourceGlobalConfig;\n}());\nexport { ResourceGlobalConfig };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceGlobalConfig.js\n// module id = ../../../../ngx-resource/src/ResourceGlobalConfig.js\n// module chunks = common","import { Resource } from './Resource';\nvar ResourceModel = /** @class */ (function () {\n    function ResourceModel() {\n    }\n    ResourceModel.prototype.$setData = function (data) {\n        Object.assign(this, data);\n        return this;\n    };\n    ResourceModel.prototype.$save = function () {\n        if (this.isNew()) {\n            return this.$create();\n        }\n        else {\n            return this.$update();\n        }\n    };\n    ResourceModel.prototype.$create = function () {\n        return this.$resource_method('create');\n    };\n    ResourceModel.prototype.$update = function () {\n        return this.$resource_method('update');\n    };\n    ResourceModel.prototype.$remove = function () {\n        return this.$resource_method('remove');\n    };\n    ResourceModel.prototype.toJSON = function () {\n        return Resource.$cleanData(this);\n    };\n    ResourceModel.prototype.isNew = function () {\n        return !this['id'];\n    };\n    ResourceModel.prototype.$resource_method = function (methodName) {\n        if (!this.$resource) {\n            console.error(\"Your Resource is not set. Please use resource.createModel() method to create model.\");\n            return this;\n        }\n        if (!this.$resource[methodName]) {\n            console.error(\"Your Resource has no implemented \" + methodName + \" method.\");\n            return this;\n        }\n        this.$resource[methodName](this);\n        return this;\n    };\n    return ResourceModel;\n}());\nexport { ResourceModel };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceModel.js\n// module id = ../../../../ngx-resource/src/ResourceModel.js\n// module chunks = common","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { RequestMethod } from '@angular/http';\nimport { Resource } from './Resource';\nimport { ResourceAction } from './ResourceAction';\nimport { ResourceParams } from './ResourceParams';\n/** A Resource base class for ODATA entities. To create a resource is just\n * enough to extend this class and all the base ODATA functionalities will be present.\n */\nvar ResourceODATA = /** @class */ (function (_super) {\n    __extends(ResourceODATA, _super);\n    function ResourceODATA() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ResourceODATA.prototype.$getUrl = function () {\n        return _super.prototype.$getUrl.call(this) + \"/\" + this.getEntitySetName();\n    };\n    ResourceODATA.prototype.getEntityName = function () {\n        return null;\n    };\n    ResourceODATA.prototype.getEntitySetName = function () {\n        return this.getEntityName() + \"s\";\n    };\n    __decorate([\n        ResourceAction({\n            path: '/{!id}'\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceODATA.prototype, \"get\", void 0);\n    __decorate([\n        ResourceAction({\n            method: RequestMethod.Post\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceODATA.prototype, \"save\", void 0);\n    __decorate([\n        ResourceAction({\n            params: {\n                \"$filter\": \"@$filter\",\n                \"$search\": \"@$search\",\n                \"$expand\": \"@$expand\",\n                \"$limit\": \"@$limit\",\n                \"query\": \"@query\"\n            },\n            isArray: true\n        }),\n        __metadata(\"design:type\", Function)\n    ], ResourceODATA.prototype, \"search\", void 0);\n    return ResourceODATA;\n}(Resource));\nexport { ResourceODATA };\n/**\n * A ODATA annotation for a resource for a ODATA entity resource extending {@link ResourceODATA}.\n */\nexport function ResourceODATAParams(params) {\n    var injectable = Injectable();\n    var zuper = ResourceParams(params);\n    return function (target) {\n        injectable(target);\n        zuper(target);\n        target.prototype.getEntityName = function () {\n            if (params.name) {\n                return params.name;\n            }\n            return typeof params.entity === \"string\" ? params.entity : params.entity.name;\n        };\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceODATA.js\n// module id = ../../../../ngx-resource/src/ResourceODATA.js\n// module chunks = common","import { ResourceProviders } from './ResourceProviders';\nimport { ResourceGlobalConfig } from './ResourceGlobalConfig';\nexport function ResourceParams(params) {\n    if (params === void 0) { params = {}; }\n    return function (target) {\n        target.prototype.getResourceOptions = function () {\n            return params;\n        };\n        if (params.add2Provides === undefined && ResourceGlobalConfig.add2Provides !== null) {\n            params.add2Provides = ResourceGlobalConfig.add2Provides;\n        }\n        if (params.add2Provides !== false) {\n            ResourceProviders.add(target, params.providersSubSet);\n        }\n        if (typeof params.removeTrailingSlash !== 'undefined') {\n            target.prototype.removeTrailingSlash = function () {\n                return !!params.removeTrailingSlash;\n            };\n        }\n        if (params.url) {\n            target.prototype.$_getUrl = function () {\n                return params.url;\n            };\n        }\n        if (params.path) {\n            target.prototype.$_getPath = function () {\n                return params.path;\n            };\n        }\n        if (params.headers) {\n            target.prototype.$_getHeaders = function () {\n                return params.headers;\n            };\n        }\n        if (params.params) {\n            target.prototype.$_getParams = function () {\n                return params.params;\n            };\n        }\n        if (params.data) {\n            target.prototype.$_getData = function () {\n                return params.data;\n            };\n        }\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceParams.js\n// module id = ../../../../ngx-resource/src/ResourceParams.js\n// module chunks = common","import { Http } from '@angular/http';\nvar ResourceProviders = /** @class */ (function () {\n    function ResourceProviders() {\n    }\n    ResourceProviders.add = function (resource, subSet) {\n        if (subSet === void 0) { subSet = null; }\n        if (!subSet) {\n            subSet = this.mainProvidersName;\n        }\n        if (!this.providers[subSet]) {\n            this.providers[subSet] = [];\n        }\n        var deps = Reflect.getMetadata('design:paramtypes', resource);\n        if (!deps || deps.length === 0) {\n            deps = [Http];\n        }\n        this.providers[subSet].push({\n            provide: resource,\n            useFactory: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return new (resource.bind.apply(resource, [void 0].concat(args)))();\n            },\n            deps: deps\n        });\n    };\n    ResourceProviders.get = function (subSet) {\n        if (subSet === void 0) { subSet = null; }\n        if (!subSet) {\n            subSet = this.mainProvidersName;\n        }\n        return this.providers[subSet] || [];\n    };\n    ResourceProviders.mainProvidersName = '__mainProviders';\n    ResourceProviders.providers = {\n        __mainProviders: []\n    };\n    return ResourceProviders;\n}());\nexport { ResourceProviders };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/ngx-resource/src/ResourceProviders.js\n// module id = ../../../../ngx-resource/src/ResourceProviders.js\n// module chunks = common","import { Observable } from '../../Observable';\nimport { map } from '../../operator/map';\nObservable.prototype.map = map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/rxjs/_esm2015/add/operator/map.js\n// module id = ../../../../rxjs/_esm2015/add/operator/map.js\n// module chunks = common","import { Observable } from '../../Observable';\nimport { mergeMap } from '../../operator/mergeMap';\nObservable.prototype.mergeMap = mergeMap;\nObservable.prototype.flatMap = mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/rxjs/_esm2015/add/operator/mergeMap.js\n// module id = ../../../../rxjs/_esm2015/add/operator/mergeMap.js\n// module chunks = common","import { Observable } from '../../Observable';\nimport { publish } from '../../operator/publish';\nObservable.prototype.publish = publish;\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/rxjs/_esm2015/add/operator/publish.js\n// module id = ../../../../rxjs/_esm2015/add/operator/publish.js\n// module chunks = common","// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.\n// leaving this module here to prevent breakage.\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/rxjs/_esm2015/add/operator/toPromise.js\n// module id = ../../../../rxjs/_esm2015/add/operator/toPromise.js\n// module chunks = common","import { publish as higherOrder } from '../operators/publish';\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish(selector) {\n    return higherOrder(selector)(this);\n}\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/rxjs/_esm2015/operator/publish.js\n// module id = ../../../../rxjs/_esm2015/operator/publish.js\n// module chunks = common","import { Subject } from '../Subject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish(selector) {\n    return selector ?\n        multicast(() => new Subject(), selector) :\n        multicast(new Subject());\n}\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/User/web-app/node_modules/rxjs/_esm2015/operators/publish.js\n// module id = ../../../../rxjs/_esm2015/operators/publish.js\n// module chunks = common"],"sourceRoot":"webpack:///"}